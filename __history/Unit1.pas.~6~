unit Unit1;

interface

uses
   Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
   System.Classes, Vcl.Graphics,
   Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
   TForm1 = class(TForm)
      OpenDialog1: TOpenDialog;
      Button1: TButton;
      Button2: TButton;
      Memo1: TMemo;
      procedure Button1Click(Sender: TObject);
      procedure Button2Click(Sender: TObject);
      procedure FormCreate(Sender: TObject);
   private
      { Private declarations }
   public
      { Public declarations }
   end;

var
   Form1: TForm1;
   s: string;
   n_if, n_op: integer;
   op1: array [1 .. 13] of string;
   op2: array [1 .. 16] of string;
   op3: array [1 .. 3] of string;
   op4: array [1 .. 1] of string;
   op5: array [1 .. 2] of string;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
   f: textfile;
   sb: string;
   ch: char;
   bl, com: boolean;
   i, j, k: integer;
begin
   n_if := 0;
   n_op := 0;
   if OpenDialog1.Execute then
   begin
      s := '';
      sb := '';
      com := false;
      AssignFile(f, OpenDialog1.FileName);
      reset(f);
      if not eof(f) then
         while not eof(f) do
         begin
            readln(f, sb);
            if copy(sb, 1, 6) = '=begin' then
               com := true;
            if not com then
            begin
               j := 0;
               k := 0;
               bl := false;
               for i := 1 to length(sb) do
               begin
                  if sb[i] = '#' then
                     j := i;
                  if sb[i] = '?' then
                     k := i;
                  if (sb[i] = ':') and (k <> 0) then
                     bl := true;
               end;
               if bl then
                  sb := copy(sb, 1, k - 1) + ' if ' +
                    copy(sb, k + 1, length(sb));
               if j > 0 then
                  delete(sb, j, length(sb) - j);
               s := s + ' ' + sb + ' ';
            end;
            if copy(sb, 1, 4) = '=end' then
               com := false;
         end
      else
         ShowMessage('File is empty!');
   end
   else
      ShowMessage('Error file !');
   Memo1.Text := s;
end;

function Oper1(s: string): boolean;
var
   i: integer;
   r: boolean;
begin
   r := false;
   for i := 1 to 13 do
      if s = op1[i] then
         r := true;
   Oper1 := r;
end;

function Oper2(s: string): boolean;
var
   i: integer;
   r: boolean;
begin
   r := false;
   for i := 1 to 16 do
      if s = op2[i] then
         r := true;
   Oper2 := r;
end;

function Oper3(s: string): boolean;
var
   i: integer;
   r: boolean;
begin
   r := false;
   for i := 1 to 5 do
      if s = op3[i] then
         r := true;
   Oper3 := r;
end;

function Oper4(s: string): boolean;
var
   i: integer;
   r: boolean;
begin
   r := false;
   for i := 1 to 1 do
      if s = op4[i] then
         r := true;
   Oper4 := r;
end;

function Oper5(s: string): boolean;
var
   i: integer;
   r: boolean;
begin
   r := false;
   for i := 1 to 2 do
      if s = op5[i] then
         r := true;
   Oper5 := r;
  // Form1.Memo1.Lines.Add(s);
end;

procedure TForm1.Button2Click(Sender: TObject);
var
   i: integer;
begin
   for i := 1 to length(s) do
   begin
      if copy(s, i, 4) = ' if ' then
      begin
         inc(n_if);
      end;
      if copy(s, i, 7) = ' elsif ' then
      begin
         inc(n_if);
      end;
      if copy(s, i, 6) = ' case ' then
      begin
         inc(n_if);
      end;
   end;
   i := 1;
   while i < length(s) do
   begin
      if Oper5(copy(s, i, 5)) then
      begin
         inc(n_op);
         i := i + 4;
      end
      else
         if Oper4(copy(s, i, 4)) then
         begin
            inc(n_op);
            i := i + 3;
         end
         else
            if Oper3(copy(s, i, 3)) then
            begin
               inc(n_op);
               i := i + 2;
            end
            else
               if Oper2(copy(s, i, 2)) then
               begin
                  inc(n_op);
                  i := i + 1;
               end
               else
                  if Oper1(copy(s, i, 1)) then
                  begin
                     inc(n_op);
                  end;
      i := i + 1;
   end;

   Memo1.Lines.Add(IntToStr(n_if));
   Memo1.Lines.Add(IntToStr(n_op));

end;

procedure TForm1.FormCreate(Sender: TObject);
begin
   op1[1] := '=';
   op1[2] := '+';
   op1[3] := '-';
   op1[4] := '*';
   op1[5] := '/';
   op1[6] := '>';
   op1[7] := '<';
   op1[8] := '&';
   op1[9] := '|';
   op1[10] := '!';
   op1[11] := '~';
   op1[12] := '^';
   op1[13] := '%';

   op2[1] := '==';
   op2[2] := '+=';
   op2[3] := '-=';
   op2[4] := '**';
   op2[5] := '/=';
   op2[6] := '>>';
   op2[7] := '<<';
   op2[8] := '&&';
   op2[9] := '||';
   op2[10] := '!=';
   op2[11] := '..';
   op2[12] := '::';
   op2[13] := '%=';
   op2[14] := '>=';
   op2[15] := '<=';
   op2[16] := '<<';

   op3[1] := '===';
   op3[2] := '<=>';
   op3[3] := '**=';

   op4[1] := ' or ';

   op5[1] := ' and ';
   op5[2] := ' not ';
end;

end.
